"use strict";(self.webpackChunknathaniel_vaur_henel_github_io=self.webpackChunknathaniel_vaur_henel_github_io||[]).push([[7764],{5130:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"transverse/kafka/index","title":"Kafka : Pr\xe9sentation","description":"Fiche technique et aide-m\xe9moire pour comprendre Kafka","source":"@site/devento/transverse/kafka/index.md","sourceDirName":"transverse/kafka","slug":"/transverse/kafka/","permalink":"/devento/transverse/kafka/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Kafka","permalink":"/devento/tags/kafka"},{"inline":true,"label":"architecture","permalink":"/devento/tags/architecture"},{"inline":true,"label":"d\xe9veloppement","permalink":"/devento/tags/developpement"}],"version":"current","lastUpdatedAt":1738540800000,"frontMatter":{"last_update":{"date":"02/03/2025"},"tags":["Kafka","architecture","d\xe9veloppement"],"keywords":["devento","architecture","aide-m\xe9moire","fiche technique"],"description":"Fiche technique et aide-m\xe9moire pour comprendre Kafka"},"sidebar":"tutorialSidebar","previous":{"title":"Les casses, ou case, en programmation.","permalink":"/devento/transverse/cases/"},"next":{"title":"L\'efficacit\xe9 des regex : un code souple et \xe9l\xe9gant","permalink":"/devento/transverse/regex/"}}');var t=n(4848),i=n(8453);const a={last_update:{date:"02/03/2025"},tags:["Kafka","architecture","d\xe9veloppement"],keywords:["devento","architecture","aide-m\xe9moire","fiche technique"],description:"Fiche technique et aide-m\xe9moire pour comprendre Kafka"},l="Kafka : Pr\xe9sentation",o={},d=[{value:"La fiche technique",id:"la-fiche-technique",level:2},{value:"1. Qu&#39;est-ce que Kafka ?",id:"1-quest-ce-que-kafka-",level:2},{value:"2. Les Composants clefs de Kafka",id:"2-les-composants-clefs-de-kafka",level:2},{value:"Producers (Producteurs)",id:"producers-producteurs",level:3},{value:"Consumers (Consommateurs)",id:"consumers-consommateurs",level:3},{value:"Topics",id:"topics",level:3},{value:"Messages",id:"messages",level:3},{value:"3. Probl\xe8mes r\xe9solus par Kafka par rapport aux appels API classiques",id:"3-probl\xe8mes-r\xe9solus-par-kafka-par-rapport-aux-appels-api-classiques",level:2},{value:"Probl\xe8me 1 : Couplage des syst\xe8mes",id:"probl\xe8me-1--couplage-des-syst\xe8mes",level:3},{value:"Probl\xe8me 2 : Scalabilit\xe9",id:"probl\xe8me-2--scalabilit\xe9",level:3},{value:"Probl\xe8me 3 : Traitement asynchrone et latence",id:"probl\xe8me-3--traitement-asynchrone-et-latence",level:3},{value:"Probl\xe8me 4 : Perte de donn\xe9es et r\xe9silience",id:"probl\xe8me-4--perte-de-donn\xe9es-et-r\xe9silience",level:3},{value:"Probl\xe8me 5 : Gestion de la complexit\xe9 et des d\xe9pendances",id:"probl\xe8me-5--gestion-de-la-complexit\xe9-et-des-d\xe9pendances",level:3},{value:"Probl\xe8me 6 : Historique des donn\xe9es",id:"probl\xe8me-6--historique-des-donn\xe9es",level:3},{value:"4. Comparaison entre Kafka et les API Classiques",id:"4-comparaison-entre-kafka-et-les-api-classiques",level:2},{value:"5. Sch\xe9ma de fonctionnement",id:"5-sch\xe9ma-de-fonctionnement",level:2},{value:"6. Conclusion",id:"6-conclusion",level:2},{value:"Ressources",id:"ressources",level:2},{value:"Sources",id:"sources",level:3},{value:"Fiches \xe0 t\xe9l\xe9charger",id:"fiches-\xe0-t\xe9l\xe9charger",level:3}];function c(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"kafka--pr\xe9sentation",children:"Kafka : Pr\xe9sentation"})}),"\n",(0,t.jsxs)(s.p,{children:["Parlons un peu litt\xe9rature : Franz Kafka est un \xe9crivain austro-hongrois. Il est consid\xe9r\xe9 comme l'un des \xe9crivains majeurs du XXe si\xe8cle. Son \u0153uvre est vue comme symbole de l'homme d\xe9racin\xe9 des temps modernes... Merci ",(0,t.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Franz_Kafka",children:"Wikip\xe9dia"})]}),"\n",(0,t.jsxs)(s.p,{children:["Finalement, non, nous allons plut\xf4t parler d'",(0,t.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Apache_Kafka",children:"Apache Kafka"})," qui tire son nom du premier. Il para\xeet que le nom sonnait bien pour un syst\xe8me qui traite des ",(0,t.jsx)(s.strong,{children:"flux de messages complexes et massifs"}),", tout comme les \u0153uvres de Franz Kafka explorent des structures labyrinthiques et d\xe9routantes."]}),"\n",(0,t.jsx)(s.p,{children:"Cependant, contrairement aux histoires de Franz qui \xe9voquent souvent l'inefficacit\xe9 et l'oppression, notre Apache Kafka est con\xe7u pour simplifier et fluidifier la communication entre syst\xe8mes."}),"\n",(0,t.jsx)(s.h2,{id:"la-fiche-technique",children:"La fiche technique"}),"\n",(0,t.jsx)(s.h2,{id:"1-quest-ce-que-kafka-",children:"1. Qu'est-ce que Kafka ?"}),"\n",(0,t.jsxs)(s.p,{children:["Kafka est une ",(0,t.jsx)(s.strong,{children:"plateforme de streaming distribu\xe9e"})," qui permet de traiter et de transmettre des donn\xe9es en temps r\xe9el. Il est particuli\xe8rement con\xe7u pour ",(0,t.jsx)(s.strong,{children:"g\xe9rer des flux de messages"})," dans des syst\xe8mes complexes, l\xe0 o\xf9 les appels API classiques montrent leurs limites."]}),"\n",(0,t.jsx)(s.h2,{id:"2-les-composants-clefs-de-kafka",children:"2. Les Composants clefs de Kafka"}),"\n",(0,t.jsx)(s.h3,{id:"producers-producteurs",children:"Producers (Producteurs)"}),"\n",(0,t.jsxs)(s.p,{children:["Un ",(0,t.jsx)(s.strong,{children:"producer"})," (producteur) dans Kafka est une application ou un service qui ",(0,t.jsx)(s.strong,{children:"envoie des messages"})," dans un ou plusieurs ",(0,t.jsx)(s.strong,{children:"topics"}),". Il g\xe9n\xe8re des donn\xe9es ou des \xe9v\xe9nements qu\u2019il souhaite transmettre \xe0 d\u2019autres syst\xe8mes ou applications via Kafka."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"R\xf4le"})," : Le producteur est responsable de la cr\xe9ation et de l\u2019envoi des \xe9v\xe9nements dans Kafka. Il peut choisir le topic dans lequel les messages seront publi\xe9s, et Kafka se charge de les acheminer correctement."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Exemple"})," : Une application de commande en ligne peut \xeatre un producteur qui envoie un message \xe0 Kafka chaque fois qu'une nouvelle commande est pass\xe9e, afin que d'autres syst\xe8mes (comme la gestion des stocks ou le service de facturation) puissent y acc\xe9der et traiter l\u2019\xe9v\xe9nement."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"consumers-consommateurs",children:"Consumers (Consommateurs)"}),"\n",(0,t.jsxs)(s.p,{children:["Un ",(0,t.jsx)(s.strong,{children:"consumer"})," (consommateur) est une application ou un service qui ",(0,t.jsx)(s.strong,{children:"lit"})," les messages publi\xe9s dans Kafka. Contrairement aux producteurs, qui envoient des messages, les consommateurs sont charg\xe9s de r\xe9cup\xe9rer et de traiter ces messages."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"R\xf4le"})," : Le consommateur se ",(0,t.jsx)(s.strong,{children:"connecte"})," \xe0 un ou plusieurs topics Kafka et ",(0,t.jsx)(s.strong,{children:"lire les messages"})," qu\u2019ils contiennent. Il peut \xeatre configur\xe9 pour traiter les messages de mani\xe8re s\xe9quentielle, ou pour les lire en parall\xe8le afin d\u2019optimiser le traitement."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Exemple"})," : Un syst\xe8me de gestion des stocks pourrait \xeatre un consommateur qui lit les messages des commandes pass\xe9es (produits par les producteurs) pour mettre \xe0 jour les niveaux de stock dans la base de donn\xe9es."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"topics",children:"Topics"}),"\n",(0,t.jsxs)(s.p,{children:["Un ",(0,t.jsx)(s.strong,{children:"topic"})," dans Kafka est une ",(0,t.jsx)(s.strong,{children:"cat\xe9gorie"})," ou un ",(0,t.jsx)(s.strong,{children:"canal"})," dans lequel les messages sont envoy\xe9s par les producteurs et auxquels les consommateurs peuvent s'abonner pour recevoir des messages."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"R\xf4le"})," : Un topic sert \xe0 organiser et cat\xe9goriser les messages en fonction de leur sujet."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Exemple"})," : Si vous avez un syst\xe8me de gestion des commandes, vous pourriez avoir un topic nomm\xe9 ",(0,t.jsx)(s.code,{children:"commande-re\xe7ue"})," pour tous les messages relatifs \xe0 la r\xe9ception de nouvelles commandes."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Les topics permettent de ",(0,t.jsx)(s.strong,{children:"s\xe9parer les types de messages"})," dans des flux ind\xe9pendants, ce qui facilite leur gestion, leur stockage et leur traitement."]}),"\n",(0,t.jsx)(s.h3,{id:"messages",children:"Messages"}),"\n",(0,t.jsxs)(s.p,{children:["Les messages sont les ",(0,t.jsx)(s.strong,{children:"unit\xe9s de donn\xe9es"})," envoy\xe9es dans Kafka. Chaque message contient une ",(0,t.jsx)(s.strong,{children:"cl\xe9"}),", une ",(0,t.jsx)(s.strong,{children:"valeur"})," et \xe9ventuellement un ",(0,t.jsx)(s.strong,{children:"timestamp"}),"."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Message"})," : Un \xe9v\xe9nement ou une donn\xe9e brute envoy\xe9e par un producteur dans un topic."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Exemple"})," : Un message pourrait \xeatre un enregistrement indiquant qu'une commande a \xe9t\xe9 re\xe7ue : ",(0,t.jsx)(s.code,{children:'{ "orderId": "12345", "status": "received", "timestamp": "2025-02-05T12:00:00Z"}'}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Kafka permet de traiter ",(0,t.jsx)(s.strong,{children:"de grandes quantit\xe9s de messages"})," (ou \xe9v\xe9nements) de mani\xe8re ",(0,t.jsx)(s.strong,{children:"asynchrone"}),", sans que les syst\xe8mes producteurs et consommateurs soient directement li\xe9s."]}),"\n",(0,t.jsxs)(s.p,{children:["Chaque message poss\xe8de un ",(0,t.jsx)(s.strong,{children:"offset"}),", un ",(0,t.jsx)(s.strong,{children:"identifiant unique"})," dans un ",(0,t.jsx)(s.strong,{children:"topic"}),", ce qui permet de suivre et de relire les messages."]}),"\n",(0,t.jsx)(s.h2,{id:"3-probl\xe8mes-r\xe9solus-par-kafka-par-rapport-aux-appels-api-classiques",children:"3. Probl\xe8mes r\xe9solus par Kafka par rapport aux appels API classiques"}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-1--couplage-des-syst\xe8mes",children:"Probl\xe8me 1 : Couplage des syst\xe8mes"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les syst\xe8mes appelants et appel\xe9s sont souvent fortement ",(0,t.jsx)(s.strong,{children:"coupl\xe9s"}),". Un appel API n\xe9cessite que le syst\xe8me destinataire soit disponible et r\xe9actif pour r\xe9pondre \xe0 la requ\xeate. Cela peut causer des ",(0,t.jsx)(s.strong,{children:"bouchons"})," et des ",(0,t.jsx)(s.strong,{children:"pannes"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka d\xe9couple les producteurs des consommateurs gr\xe2ce \xe0 son mod\xe8le ",(0,t.jsx)(s.strong,{children:"publish-subscribe"}),". Les producteurs envoient des messages dans un topic, et les consommateurs peuvent les traiter \xe0 leur propre rythme, sans d\xe9pendre de la disponibilit\xe9 imm\xe9diate du producteur. Cela r\xe9sout les probl\xe8mes de ",(0,t.jsx)(s.strong,{children:"couplage direct"})," entre les syst\xe8mes. De plus, Kafka offre un m\xe9canisme de file d'attente de messages, ce qui permet de ",(0,t.jsx)(s.strong,{children:"bufferiser"})," les donn\xe9es en attendant que les consommateurs les traitent \xe0 leur rythme."]}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-2--scalabilit\xe9",children:"Probl\xe8me 2 : Scalabilit\xe9"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les appels API peuvent devenir un goulot d'\xe9tranglement lorsqu'un grand nombre d'appels simultan\xe9s sont effectu\xe9s, en raison des ",(0,t.jsx)(s.strong,{children:"limites de capacit\xe9"})," des serveurs et des syst\xe8mes impliqu\xe9s."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka peut traiter des ",(0,t.jsx)(s.strong,{children:"millions de messages par seconde"})," gr\xe2ce \xe0 son architecture distribu\xe9e et sa capacit\xe9 \xe0 se ",(0,t.jsx)(s.strong,{children:"scaler horizontalement"}),". Il peut ainsi g\xe9rer de tr\xe8s grands volumes de donn\xe9es sans impact majeur sur les performances, ce qui le rend bien plus adapt\xe9 pour les applications n\xe9cessitant une haute ",(0,t.jsx)(s.strong,{children:"scalabilit\xe9"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-3--traitement-asynchrone-et-latence",children:"Probl\xe8me 3 : Traitement asynchrone et latence"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les appels API sont g\xe9n\xe9ralement ",(0,t.jsx)(s.strong,{children:"synchrone"}),", ce qui signifie que le syst\xe8me appelant attend une r\xe9ponse imm\xe9diate du syst\xe8me appel\xe9. Cela peut entra\xeener des ",(0,t.jsx)(s.strong,{children:"temps d'attente"})," longs et une ",(0,t.jsx)(s.strong,{children:"latence"})," \xe9lev\xe9e."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka fonctionne de mani\xe8re ",(0,t.jsx)(s.strong,{children:"asynchrone"}),", permettant aux consommateurs de traiter les messages lorsqu'ils sont pr\xeats, sans attendre que le producteur ou d'autres consommateurs r\xe9pondent. Cela permet de r\xe9duire la latence et d'am\xe9liorer la r\xe9activit\xe9 du syst\xe8me global."]}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-4--perte-de-donn\xe9es-et-r\xe9silience",children:"Probl\xe8me 4 : Perte de donn\xe9es et r\xe9silience"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les appels API peuvent \xe9chouer ou perdre des informations en cas de ",(0,t.jsx)(s.strong,{children:"pannes r\xe9seau"}),", de ",(0,t.jsx)(s.strong,{children:"probl\xe8mes serveur"}),", ou de ",(0,t.jsx)(s.strong,{children:"d\xe9connexion"})," entre les syst\xe8mes."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka garantit la ",(0,t.jsx)(s.strong,{children:"persistance des messages"})," gr\xe2ce \xe0 son syst\xe8me de stockage sur disque et \xe0 sa ",(0,t.jsx)(s.strong,{children:"r\xe9plication"})," des messages entre plusieurs brokers. En cas de panne d'un broker, les messages sont r\xe9cup\xe9rables \xe0 partir des r\xe9plicas, ce qui garantit une ",(0,t.jsx)(s.strong,{children:"r\xe9silience \xe9lev\xe9e"})," et une ",(0,t.jsx)(s.strong,{children:"tol\xe9rance aux pannes"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-5--gestion-de-la-complexit\xe9-et-des-d\xe9pendances",children:"Probl\xe8me 5 : Gestion de la complexit\xe9 et des d\xe9pendances"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les syst\xe8mes interconnect\xe9s via des API doivent g\xe9rer des cha\xeenes complexes d'appels, ce qui peut devenir difficile \xe0 maintenir \xe0 mesure que l'application \xe9volue. Cela entra\xeene une complexit\xe9 croissante dans la gestion des ",(0,t.jsx)(s.strong,{children:"d\xe9pendances"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka simplifie cette gestion en permettant un ",(0,t.jsx)(s.strong,{children:"mod\xe8le de communication d\xe9coupl\xe9"}),". Les producteurs envoient des messages dans des topics sans conna\xeetre les consommateurs qui les traiteront. Les consommateurs peuvent se connecter \xe0 un ou plusieurs topics sans interf\xe9rer avec les autres syst\xe8mes, r\xe9duisant ainsi la complexit\xe9 de l'architecture. De plus, Kafka permet de faciliter l'\xe9volutivit\xe9 des applications, en permettant aux syst\xe8mes de se d\xe9velopper ind\xe9pendamment, tout en conservant une communication fiable."]}),"\n",(0,t.jsx)(s.h3,{id:"probl\xe8me-6--historique-des-donn\xe9es",children:"Probl\xe8me 6 : Historique des donn\xe9es"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Appels API classiques"})," : Les API ne permettent pas de conserver un ",(0,t.jsx)(s.strong,{children:"historique des appels"})," ou des donn\xe9es \xe9chang\xe9es sur le long terme. Si une donn\xe9e est perdue ou non trait\xe9e \xe0 un moment donn\xe9, elle est souvent irr\xe9cup\xe9rable."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kafka"})," : Kafka permet de stocker les messages dans les topics pendant une p\xe9riode d\xe9finie (param\xe9trable), ce qui permet de ",(0,t.jsx)(s.strong,{children:"rejouer les \xe9v\xe9nements"})," ou de r\xe9cup\xe9rer des donn\xe9es pass\xe9es \xe0 tout moment, m\xeame si elles ont \xe9t\xe9 envoy\xe9es il y a plusieurs jours. Cela est particuli\xe8rement utile pour les cas d'usage n\xe9cessitant de ",(0,t.jsx)(s.strong,{children:"l'archivage"})," ou de l'",(0,t.jsx)(s.strong,{children:"analyse de donn\xe9es historiques"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"4-comparaison-entre-kafka-et-les-api-classiques",children:"4. Comparaison entre Kafka et les API Classiques"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Probl\xe8me"}),(0,t.jsx)(s.th,{children:"API Classiques"}),(0,t.jsx)(s.th,{children:"Kafka"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Couplage des syst\xe8mes"})}),(0,t.jsx)(s.td,{children:"Fortement coupl\xe9"}),(0,t.jsx)(s.td,{children:"D\xe9couplage complet entre producteurs/consommateurs"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Scalabilit\xe9"})}),(0,t.jsx)(s.td,{children:"Goulot d'\xe9tranglement en cas de forte charge"}),(0,t.jsx)(s.td,{children:"Scalabilit\xe9 horizontale, capable de g\xe9rer de grands volumes"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Latence"})}),(0,t.jsx)(s.td,{children:"Temps de r\xe9ponse imm\xe9diat requis"}),(0,t.jsx)(s.td,{children:"Traitement asynchrone avec faible latence"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Tol\xe9rance aux pannes"})}),(0,t.jsx)(s.td,{children:"Risque de perte de donn\xe9es en cas de panne"}),(0,t.jsx)(s.td,{children:"Haute r\xe9silience et stockage des messages sur disque"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Complexit\xe9 et d\xe9pendances"})}),(0,t.jsx)(s.td,{children:"Cha\xeenes d'appels API complexes et fragiles"}),(0,t.jsx)(s.td,{children:"Communication d\xe9coupl\xe9e et ind\xe9pendante entre syst\xe8mes"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Historique des donn\xe9es"})}),(0,t.jsx)(s.td,{children:"Pas d'historique des appels"}),(0,t.jsx)(s.td,{children:"Conservation des messages pendant un temps configurable"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Gestion de la charge"})}),(0,t.jsx)(s.td,{children:"Risque de surcharge d'un serveur unique"}),(0,t.jsxs)(s.td,{children:["R\xe9partition automatique sur plusieurs partitions, message envoy\xe9 en ",(0,t.jsx)(s.strong,{children:"batchs"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Traitement parall\xe8le"})}),(0,t.jsx)(s.td,{children:"Les API doivent g\xe9rer les appels simultan\xe9s"}),(0,t.jsx)(s.td,{children:"Plusieurs consommateurs peuvent traiter en parall\xe8le"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"5-sch\xe9ma-de-fonctionnement",children:"5. Sch\xe9ma de fonctionnement"}),"\n",(0,t.jsxs)(s.p,{children:["Voici un diagramme repr\xe9sentant le fonctionnement de ",(0,t.jsx)(s.strong,{children:"Kafka"})," avec les ",(0,t.jsx)(s.strong,{children:"Producers"}),", ",(0,t.jsx)(s.strong,{children:"Topics"}),", ",(0,t.jsx)(s.strong,{children:"Brokers"}),", et ",(0,t.jsx)(s.strong,{children:"Consumers"})," :"]}),"\n",(0,t.jsx)(s.mermaid,{value:'graph LR\n  subgraph Kafka Cluster\n    subgraph Broker 1\n      T1["Topic 1 (Partition 0)"]\n      T2["Topic 1 (Partition 1)"]\n    end\n    subgraph Broker 2\n      T3["Topic 2 (Partition 0)"]\n      T4["Topic 2 (Partition 1)"]\n    end\n  end\n  \n  P1["Producer 1"] --\x3e|Envoie des messages| T1\n  P2["Producer 2"] --\x3e|Envoie des messages| T2\n  P3["Producer 3"] --\x3e|Envoie des messages| T3\n  P4["Producer 4"] --\x3e|Envoie des messages| T4\n\n  C1["Consumer 1"] --\x3e|Lit les messages| T1\n  C2["Consumer 2"] --\x3e|Lit les messages| T2\n  C3["Consumer 3"] --\x3e|Lit les messages| T3\n  C4["Consumer 4"] --\x3e|Lit les messages| T4\n\n  subgraph Consumer Group A\n    C1\n    C2\n  end\n\n  subgraph Consumer Group B\n    C3\n    C4\n  end'}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Les ",(0,t.jsx)(s.strong,{children:"Producers"})," (P1, P2, P3, P4) ",(0,t.jsx)(s.strong,{children:"publient des messages"})," dans les ",(0,t.jsx)(s.strong,{children:"Topics"})," g\xe9r\xe9s par Kafka."]}),"\n",(0,t.jsxs)(s.li,{children:["Les ",(0,t.jsx)(s.strong,{children:"Topics"})," sont ",(0,t.jsx)(s.strong,{children:"partitionn\xe9s"})," (ex : ",(0,t.jsx)(s.code,{children:"Topic 1"})," a ",(0,t.jsx)(s.code,{children:"Partition 0"})," et ",(0,t.jsx)(s.code,{children:"Partition 1"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["Les ",(0,t.jsx)(s.strong,{children:"Brokers"})," sont les serveurs Kafka qui stockent ces partitions."]}),"\n",(0,t.jsxs)(s.li,{children:["Les ",(0,t.jsx)(s.strong,{children:"Consumers"})," (C1, C2, C3, C4) ",(0,t.jsx)(s.strong,{children:"lisent les messages"})," des topics."]}),"\n",(0,t.jsxs)(s.li,{children:["Les ",(0,t.jsx)(s.strong,{children:"Consumers peuvent \xeatre regroup\xe9s"})," dans des ",(0,t.jsx)(s.strong,{children:"Consumer Groups"})," (ex : ",(0,t.jsx)(s.code,{children:"Consumer Group A"})," lit ",(0,t.jsx)(s.code,{children:"Topic 1"}),", ",(0,t.jsx)(s.code,{children:"Consumer Group B"})," lit ",(0,t.jsx)(s.code,{children:"Topic 2"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["Un ",(0,t.jsx)(s.strong,{children:"Consumer Group"})," assure qu'un ",(0,t.jsx)(s.strong,{children:"message d'une partition est lu par un seul consommateur \xe0 la fois"}),", permettant le ",(0,t.jsx)(s.strong,{children:"traitement parall\xe8le"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Ce sch\xe9ma illustre le fonctionnement g\xe9n\xe9ral de Kafka dans un environnement distribu\xe9 et scalable."}),"\n",(0,t.jsxs)(s.p,{children:["Le mod\xe8le partitionn\xe9 permet de ",(0,t.jsx)(s.strong,{children:"scaler horizontalement"}),", et donc d\u2019ajouter des consommateurs et producteurs selon les besoins."]}),"\n",(0,t.jsx)(s.h2,{id:"6-conclusion",children:"6. Conclusion"}),"\n",(0,t.jsxs)(s.p,{children:["Kafka est une solution moderne et robuste pour les entreprises ayant besoin de g\xe9rer des flux de donn\xe9es massifs en temps r\xe9el, en r\xe9duisant les probl\xe8mes li\xe9s aux appels API classiques, notamment en termes de scalabilit\xe9, de r\xe9silience, et de gestion des d\xe9pendances. Gr\xe2ce \xe0 son mod\xe8le bas\xe9 sur les ",(0,t.jsx)(s.strong,{children:"topics"})," et les ",(0,t.jsx)(s.strong,{children:"messages"}),", Kafka permet de mieux g\xe9rer les \xe9v\xe9nements, la persistance des donn\xe9es et l'int\xe9gration des syst\xe8mes sans compromettre les performances."]}),"\n",(0,t.jsx)(s.h2,{id:"ressources",children:"Ressources"}),"\n",(0,t.jsx)(s.h3,{id:"sources",children:"Sources"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://kafka.apache.org/11/documentation/streams/architecture",children:"Architecture - Apache Kafka"})," : d\xe9crit en d\xe9tail l'architecture de Kafka Streams, expliquant comment elle simplifie le d\xe9veloppement d'applications en s'appuyant sur les biblioth\xe8ques ",(0,t.jsx)(s.strong,{children:"producer"})," et ",(0,t.jsx)(s.strong,{children:"consumer"})," de Kafka."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://rapidapi.com/guides/difference-kafka-rest",children:"Difference between Kafka and REST API"})," : un article qui compare les API de Kafka aux API REST, en soulignant les diff\xe9rences fondamentales entre ces deux architectures."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://www.confluent.io/blog/http-and-rest-api-use-cases-and-architecture-with-apache-kafka/",children:"HTTP and REST APIs with Apache Kafka - Confluent"})," : un article qui explore l'interface RESTful de Kafka, facilitant la production et la consommation de messages via HTTP(S) au lieu du protocole Kafka natif."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://docs.confluent.io/kafka/introduction.html",children:"Introduction to Apache Kafka | Confluent Documentation"})," : une introduction \xe0 Kafka en tant que plateforme de streaming d'\xe9v\xe9nements distribu\xe9e, con\xe7ue pour g\xe9rer de grands volumes de donn\xe9es de mani\xe8re \xe9volutive et tol\xe9rante aux pannes."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://developer.confluent.io/learn/event-streaming-vs-related-trends/",children:"Kafka vs. Other Systems (REST, Enterprise Service Bus, Database)"})," : ce guide compare Kafka aux syst\xe8mes de messagerie traditionnels, en abordant les id\xe9es re\xe7ues courantes et en fournissant des directives d'utilisation."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Franz_Kafka",children:"Wikip\xe9dia - Franz Kafka"})," : la page Wikip\xe9dia de l'auteur \xe0 qui Apache Kafka doit son nom."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Apache_Kafka",children:"Wikip\xe9dia - Apache Kafka"})," : la page Wikip\xe9dia d'Apache Kafka, dont on parle ici."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"fiches-\xe0-t\xe9l\xe9charger",children:"Fiches \xe0 t\xe9l\xe9charger"}),"\n",(0,t.jsx)(s.p,{children:"Tu peux t\xe9l\xe9charger un aide-m\xe9moire de ce Devento en :"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8661).A+"",children:"\ud83d\udce5 Version PDF"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(7174).A+"",children:"\ud83d\udce5 Version Markdown"})}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.em,{children:["Cette fiche a \xe9t\xe9 publi\xe9e en premier sur ",(0,t.jsx)(s.a,{href:"https://nathaniel-vaur-henel.github.io/",children:"https://nathaniel-vaur-henel.github.io/"})," par ",(0,t.jsx)(s.a,{href:"https://nathaniel-vaur-henel.github.io/crafters/nathaniel-vaur-henel",children:"Nathaniel Vaur Henel"})," sous licence ",(0,t.jsx)(s.a,{href:"https://creativecommons.org/licenses/by/4.0/",children:"Attribution 4.0 International"})]})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},7174:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/files/kafka_aide-m\xe9moire-2f78b08c2994682077365d0f9a187796.markdown"},8661:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/files/kafka_aide-m\xe9moire-341b5e13edaf42e2443418bc67ad7c27.pdf"},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var r=n(6540);const t={},i=r.createContext(t);function a(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);